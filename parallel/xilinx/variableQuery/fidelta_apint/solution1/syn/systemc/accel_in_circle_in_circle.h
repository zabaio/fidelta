// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _accel_in_circle_in_circle_HH_
#define _accel_in_circle_in_circle_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0.h"
#include "accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0.h"
#include "accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0.h"
#include "accel_in_circle_accel_in_circle_fcmp_32ns_32ns_1_1_0.h"

namespace ap_rtl {

struct accel_in_circle_in_circle : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<32> > innerdata_0_read;
    sc_in< sc_lv<32> > innerdata_1_read;
    sc_in< sc_lv<32> > father_0_read;
    sc_in< sc_lv<32> > father_1_read;
    sc_in< sc_lv<32> > father_2_read;
    sc_in< sc_lv<32> > father_3_read;
    sc_in< sc_lv<32> > father_4_read;
    sc_in< sc_lv<32> > father_5_read;
    sc_out< sc_lv<1> > ap_return;
    sc_in< sc_logic > ap_ce;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    accel_in_circle_in_circle(sc_module_name name);
    SC_HAS_PROCESS(accel_in_circle_in_circle);

    ~accel_in_circle_in_circle();

    sc_trace_file* mVcdFile;

    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U1;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U2;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U3;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U4;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U5;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U6;
    accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0_U7;
    accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0_U8;
    accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0_U9;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U10;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U11;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U12;
    accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U13;
    accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0<1,3,32,32,32>* accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0_U14;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U15;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U16;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U17;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U18;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U19;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U20;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U21;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U22;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U23;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U24;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U25;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U26;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U27;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U28;
    accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0<1,2,32,32,32>* accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U29;
    accel_in_circle_accel_in_circle_fcmp_32ns_32ns_1_1_0<1,1,32,32,1>* accel_in_circle_fcmp_32ns_32ns_1_1_0_U30;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter16;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > grp_fu_78_p2;
    sc_signal< sc_lv<32> > xda_reg_296;
    sc_signal< sc_lv<32> > grp_fu_84_p2;
    sc_signal< sc_lv<32> > xdb_reg_304;
    sc_signal< sc_lv<32> > grp_fu_90_p2;
    sc_signal< sc_lv<32> > xdc_reg_312;
    sc_signal< sc_lv<32> > grp_fu_96_p2;
    sc_signal< sc_lv<32> > yda_reg_320;
    sc_signal< sc_lv<32> > grp_fu_102_p2;
    sc_signal< sc_lv<32> > ydb_reg_328;
    sc_signal< sc_lv<32> > grp_fu_108_p2;
    sc_signal< sc_lv<32> > ydc_reg_336;
    sc_signal< sc_lv<32> > grp_fu_146_p2;
    sc_signal< sc_lv<32> > tmp_reg_344;
    sc_signal< sc_lv<32> > grp_fu_150_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_349;
    sc_signal< sc_lv<32> > grp_fu_154_p2;
    sc_signal< sc_lv<32> > tmp_2_reg_354;
    sc_signal< sc_lv<32> > grp_fu_158_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_359;
    sc_signal< sc_lv<32> > grp_fu_162_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_364;
    sc_signal< sc_lv<32> > grp_fu_166_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_369;
    sc_signal< sc_lv<32> > grp_fu_170_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_374;
    sc_signal< sc_lv<32> > grp_fu_174_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_379;
    sc_signal< sc_lv<32> > grp_fu_178_p2;
    sc_signal< sc_lv<32> > tmp_8_reg_384;
    sc_signal< sc_lv<32> > grp_fu_182_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_389;
    sc_signal< sc_lv<32> > grp_fu_186_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_394;
    sc_signal< sc_lv<32> > grp_fu_190_p2;
    sc_signal< sc_lv<32> > tmp_10_reg_399;
    sc_signal< sc_lv<32> > grp_fu_114_p2;
    sc_signal< sc_lv<32> > da2da2_reg_404;
    sc_signal< sc_lv<32> > grp_fu_118_p2;
    sc_signal< sc_lv<32> > db2db2_reg_409;
    sc_signal< sc_lv<32> > grp_fu_122_p2;
    sc_signal< sc_lv<32> > dc2dc2_reg_414;
    sc_signal< sc_lv<32> > grp_fu_126_p2;
    sc_signal< sc_lv<32> > min1_reg_419;
    sc_signal< sc_lv<32> > grp_fu_130_p2;
    sc_signal< sc_lv<32> > min2_reg_424;
    sc_signal< sc_lv<32> > grp_fu_134_p2;
    sc_signal< sc_lv<32> > min3_reg_429;
    sc_signal< sc_lv<32> > grp_fu_194_p2;
    sc_signal< sc_lv<32> > tmp_11_reg_434;
    sc_signal< sc_lv<32> > grp_fu_198_p2;
    sc_signal< sc_lv<32> > tmp_12_reg_439;
    sc_signal< sc_lv<32> > grp_fu_202_p2;
    sc_signal< sc_lv<32> > tmp_14_reg_444;
    sc_signal< sc_lv<32> > tmp_14_reg_444_pp0_iter10_reg;
    sc_signal< sc_lv<32> > tmp_14_reg_444_pp0_iter11_reg;
    sc_signal< sc_lv<32> > tmp_14_reg_444_pp0_iter12_reg;
    sc_signal< sc_lv<32> > grp_fu_138_p2;
    sc_signal< sc_lv<32> > tmp_13_reg_449;
    sc_signal< sc_lv<32> > grp_fu_142_p2;
    sc_signal< sc_lv<32> > det_reg_454;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > bitcast_ln30_fu_211_p1;
    sc_signal< sc_lv<8> > tmp_15_fu_214_p4;
    sc_signal< sc_lv<23> > trunc_ln30_fu_224_p1;
    sc_signal< sc_lv<1> > icmp_ln30_1_fu_234_p2;
    sc_signal< sc_lv<1> > icmp_ln30_fu_228_p2;
    sc_signal< sc_lv<1> > or_ln30_fu_240_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_206_p2;
    sc_signal< sc_logic > grp_fu_78_ce;
    sc_signal< sc_logic > grp_fu_84_ce;
    sc_signal< sc_logic > grp_fu_90_ce;
    sc_signal< sc_logic > grp_fu_96_ce;
    sc_signal< sc_logic > grp_fu_102_ce;
    sc_signal< sc_logic > grp_fu_108_ce;
    sc_signal< sc_logic > grp_fu_114_ce;
    sc_signal< sc_logic > grp_fu_118_ce;
    sc_signal< sc_logic > grp_fu_122_ce;
    sc_signal< sc_logic > grp_fu_126_ce;
    sc_signal< sc_logic > grp_fu_130_ce;
    sc_signal< sc_logic > grp_fu_134_ce;
    sc_signal< sc_logic > grp_fu_138_ce;
    sc_signal< sc_logic > grp_fu_142_ce;
    sc_signal< sc_logic > grp_fu_146_ce;
    sc_signal< sc_logic > grp_fu_150_ce;
    sc_signal< sc_logic > grp_fu_154_ce;
    sc_signal< sc_logic > grp_fu_158_ce;
    sc_signal< sc_logic > grp_fu_162_ce;
    sc_signal< sc_logic > grp_fu_166_ce;
    sc_signal< sc_logic > grp_fu_170_ce;
    sc_signal< sc_logic > grp_fu_174_ce;
    sc_signal< sc_logic > grp_fu_178_ce;
    sc_signal< sc_logic > grp_fu_182_ce;
    sc_signal< sc_logic > grp_fu_186_ce;
    sc_signal< sc_logic > grp_fu_190_ce;
    sc_signal< sc_logic > grp_fu_194_ce;
    sc_signal< sc_logic > grp_fu_198_ce;
    sc_signal< sc_logic > grp_fu_202_ce;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<1> > and_ln30_fu_246_p2;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<32> > innerdata_0_read_int_reg;
    sc_signal< sc_lv<32> > innerdata_1_read_int_reg;
    sc_signal< sc_lv<32> > father_0_read_int_reg;
    sc_signal< sc_lv<32> > father_1_read_int_reg;
    sc_signal< sc_lv<32> > father_2_read_int_reg;
    sc_signal< sc_lv<32> > father_3_read_int_reg;
    sc_signal< sc_lv<32> > father_4_read_int_reg;
    sc_signal< sc_lv<32> > father_5_read_int_reg;
    sc_signal< sc_lv<1> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_and_ln30_fu_246_p2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state10_pp0_stage0_iter9();
    void thread_ap_block_state11_pp0_stage0_iter10();
    void thread_ap_block_state12_pp0_stage0_iter11();
    void thread_ap_block_state13_pp0_stage0_iter12();
    void thread_ap_block_state14_pp0_stage0_iter13();
    void thread_ap_block_state15_pp0_stage0_iter14();
    void thread_ap_block_state16_pp0_stage0_iter15();
    void thread_ap_block_state17_pp0_stage0_iter16();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state7_pp0_stage0_iter6();
    void thread_ap_block_state8_pp0_stage0_iter7();
    void thread_ap_block_state9_pp0_stage0_iter8();
    void thread_ap_return();
    void thread_bitcast_ln30_fu_211_p1();
    void thread_grp_fu_102_ce();
    void thread_grp_fu_108_ce();
    void thread_grp_fu_114_ce();
    void thread_grp_fu_118_ce();
    void thread_grp_fu_122_ce();
    void thread_grp_fu_126_ce();
    void thread_grp_fu_130_ce();
    void thread_grp_fu_134_ce();
    void thread_grp_fu_138_ce();
    void thread_grp_fu_142_ce();
    void thread_grp_fu_146_ce();
    void thread_grp_fu_150_ce();
    void thread_grp_fu_154_ce();
    void thread_grp_fu_158_ce();
    void thread_grp_fu_162_ce();
    void thread_grp_fu_166_ce();
    void thread_grp_fu_170_ce();
    void thread_grp_fu_174_ce();
    void thread_grp_fu_178_ce();
    void thread_grp_fu_182_ce();
    void thread_grp_fu_186_ce();
    void thread_grp_fu_190_ce();
    void thread_grp_fu_194_ce();
    void thread_grp_fu_198_ce();
    void thread_grp_fu_202_ce();
    void thread_grp_fu_78_ce();
    void thread_grp_fu_84_ce();
    void thread_grp_fu_90_ce();
    void thread_grp_fu_96_ce();
    void thread_icmp_ln30_1_fu_234_p2();
    void thread_icmp_ln30_fu_228_p2();
    void thread_or_ln30_fu_240_p2();
    void thread_tmp_15_fu_214_p4();
    void thread_trunc_ln30_fu_224_p1();
};

}

using namespace ap_rtl;

#endif
