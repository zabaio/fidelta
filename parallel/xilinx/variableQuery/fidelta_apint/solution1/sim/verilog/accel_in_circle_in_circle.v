// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module accel_in_circle_in_circle (
        ap_clk,
        ap_rst,
        innerdata_0_read,
        innerdata_1_read,
        father_0_read,
        father_1_read,
        father_2_read,
        father_3_read,
        father_4_read,
        father_5_read,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] innerdata_0_read;
input  [31:0] innerdata_1_read;
input  [31:0] father_0_read;
input  [31:0] father_1_read;
input  [31:0] father_2_read;
input  [31:0] father_3_read;
input  [31:0] father_4_read;
input  [31:0] father_5_read;
output  [0:0] ap_return;
input   ap_ce;

reg[0:0] ap_return;

wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_78_p2;
reg   [31:0] xda_reg_296;
wire   [31:0] grp_fu_84_p2;
reg   [31:0] xdb_reg_304;
wire   [31:0] grp_fu_90_p2;
reg   [31:0] xdc_reg_312;
wire   [31:0] grp_fu_96_p2;
reg   [31:0] yda_reg_320;
wire   [31:0] grp_fu_102_p2;
reg   [31:0] ydb_reg_328;
wire   [31:0] grp_fu_108_p2;
reg   [31:0] ydc_reg_336;
wire   [31:0] grp_fu_146_p2;
reg   [31:0] tmp_reg_344;
wire   [31:0] grp_fu_150_p2;
reg   [31:0] tmp_1_reg_349;
wire   [31:0] grp_fu_154_p2;
reg   [31:0] tmp_2_reg_354;
wire   [31:0] grp_fu_158_p2;
reg   [31:0] tmp_3_reg_359;
wire   [31:0] grp_fu_162_p2;
reg   [31:0] tmp_4_reg_364;
wire   [31:0] grp_fu_166_p2;
reg   [31:0] tmp_5_reg_369;
wire   [31:0] grp_fu_170_p2;
reg   [31:0] tmp_6_reg_374;
wire   [31:0] grp_fu_174_p2;
reg   [31:0] tmp_7_reg_379;
wire   [31:0] grp_fu_178_p2;
reg   [31:0] tmp_8_reg_384;
wire   [31:0] grp_fu_182_p2;
reg   [31:0] tmp_9_reg_389;
wire   [31:0] grp_fu_186_p2;
reg   [31:0] tmp_s_reg_394;
wire   [31:0] grp_fu_190_p2;
reg   [31:0] tmp_10_reg_399;
wire   [31:0] grp_fu_114_p2;
reg   [31:0] da2da2_reg_404;
wire   [31:0] grp_fu_118_p2;
reg   [31:0] db2db2_reg_409;
wire   [31:0] grp_fu_122_p2;
reg   [31:0] dc2dc2_reg_414;
wire   [31:0] grp_fu_126_p2;
reg   [31:0] min1_reg_419;
wire   [31:0] grp_fu_130_p2;
reg   [31:0] min2_reg_424;
wire   [31:0] grp_fu_134_p2;
reg   [31:0] min3_reg_429;
wire   [31:0] grp_fu_194_p2;
reg   [31:0] tmp_11_reg_434;
wire   [31:0] grp_fu_198_p2;
reg   [31:0] tmp_12_reg_439;
wire   [31:0] grp_fu_202_p2;
reg   [31:0] tmp_14_reg_444;
reg   [31:0] tmp_14_reg_444_pp0_iter10_reg;
reg   [31:0] tmp_14_reg_444_pp0_iter11_reg;
reg   [31:0] tmp_14_reg_444_pp0_iter12_reg;
wire   [31:0] grp_fu_138_p2;
reg   [31:0] tmp_13_reg_449;
wire   [31:0] grp_fu_142_p2;
reg   [31:0] det_reg_454;
wire    ap_block_pp0_stage0;
wire   [31:0] bitcast_ln30_fu_211_p1;
wire   [7:0] tmp_15_fu_214_p4;
wire   [22:0] trunc_ln30_fu_224_p1;
wire   [0:0] icmp_ln30_1_fu_234_p2;
wire   [0:0] icmp_ln30_fu_228_p2;
wire   [0:0] or_ln30_fu_240_p2;
wire   [0:0] tmp_16_fu_206_p2;
reg    grp_fu_78_ce;
reg    grp_fu_84_ce;
reg    grp_fu_90_ce;
reg    grp_fu_96_ce;
reg    grp_fu_102_ce;
reg    grp_fu_108_ce;
reg    grp_fu_114_ce;
reg    grp_fu_118_ce;
reg    grp_fu_122_ce;
reg    grp_fu_126_ce;
reg    grp_fu_130_ce;
reg    grp_fu_134_ce;
reg    grp_fu_138_ce;
reg    grp_fu_142_ce;
reg    grp_fu_146_ce;
reg    grp_fu_150_ce;
reg    grp_fu_154_ce;
reg    grp_fu_158_ce;
reg    grp_fu_162_ce;
reg    grp_fu_166_ce;
reg    grp_fu_170_ce;
reg    grp_fu_174_ce;
reg    grp_fu_178_ce;
reg    grp_fu_182_ce;
reg    grp_fu_186_ce;
reg    grp_fu_190_ce;
reg    grp_fu_194_ce;
reg    grp_fu_198_ce;
reg    grp_fu_202_ce;
wire    ap_block_pp0_stage0_00001;
wire   [0:0] and_ln30_fu_246_p2;
reg    ap_ce_reg;
reg   [31:0] innerdata_0_read_int_reg;
reg   [31:0] innerdata_1_read_int_reg;
reg   [31:0] father_0_read_int_reg;
reg   [31:0] father_1_read_int_reg;
reg   [31:0] father_2_read_int_reg;
reg   [31:0] father_3_read_int_reg;
reg   [31:0] father_4_read_int_reg;
reg   [31:0] father_5_read_int_reg;
reg   [0:0] ap_return_int_reg;

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(father_0_read_int_reg),
    .din1(innerdata_0_read_int_reg),
    .ce(grp_fu_78_ce),
    .dout(grp_fu_78_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(father_2_read_int_reg),
    .din1(innerdata_0_read_int_reg),
    .ce(grp_fu_84_ce),
    .dout(grp_fu_84_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(father_4_read_int_reg),
    .din1(innerdata_0_read_int_reg),
    .ce(grp_fu_90_ce),
    .dout(grp_fu_90_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(father_1_read_int_reg),
    .din1(innerdata_1_read_int_reg),
    .ce(grp_fu_96_ce),
    .dout(grp_fu_96_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(father_3_read_int_reg),
    .din1(innerdata_1_read_int_reg),
    .ce(grp_fu_102_ce),
    .dout(grp_fu_102_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(father_5_read_int_reg),
    .din1(innerdata_1_read_int_reg),
    .ce(grp_fu_108_ce),
    .dout(grp_fu_108_p2)
);

accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_344),
    .din1(tmp_1_reg_349),
    .ce(grp_fu_114_ce),
    .dout(grp_fu_114_p2)
);

accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_354),
    .din1(tmp_3_reg_359),
    .ce(grp_fu_118_ce),
    .dout(grp_fu_118_p2)
);

accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_364),
    .din1(tmp_5_reg_369),
    .ce(grp_fu_122_ce),
    .dout(grp_fu_122_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_374),
    .din1(tmp_7_reg_379),
    .ce(grp_fu_126_ce),
    .dout(grp_fu_126_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_reg_384),
    .din1(tmp_9_reg_389),
    .ce(grp_fu_130_ce),
    .dout(grp_fu_130_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_394),
    .din1(tmp_10_reg_399),
    .ce(grp_fu_134_ce),
    .dout(grp_fu_134_p2)
);

accel_in_circle_accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fsub_32ns_32ns_32_3_full_dsp_0_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_11_reg_434),
    .din1(tmp_12_reg_439),
    .ce(grp_fu_138_ce),
    .dout(grp_fu_138_p2)
);

accel_in_circle_accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fadd_32ns_32ns_32_3_full_dsp_0_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_13_reg_449),
    .din1(tmp_14_reg_444_pp0_iter12_reg),
    .ce(grp_fu_142_ce),
    .dout(grp_fu_142_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xda_reg_296),
    .din1(xda_reg_296),
    .ce(grp_fu_146_ce),
    .dout(grp_fu_146_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(yda_reg_320),
    .din1(yda_reg_320),
    .ce(grp_fu_150_ce),
    .dout(grp_fu_150_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xdb_reg_304),
    .din1(xdb_reg_304),
    .ce(grp_fu_154_ce),
    .dout(grp_fu_154_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ydb_reg_328),
    .din1(ydb_reg_328),
    .ce(grp_fu_158_ce),
    .dout(grp_fu_158_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xdc_reg_312),
    .din1(xdc_reg_312),
    .ce(grp_fu_162_ce),
    .dout(grp_fu_162_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ydc_reg_336),
    .din1(ydc_reg_336),
    .ce(grp_fu_166_ce),
    .dout(grp_fu_166_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xdb_reg_304),
    .din1(ydc_reg_336),
    .ce(grp_fu_170_ce),
    .dout(grp_fu_170_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xdc_reg_312),
    .din1(ydb_reg_328),
    .ce(grp_fu_174_ce),
    .dout(grp_fu_174_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xda_reg_296),
    .din1(ydc_reg_336),
    .ce(grp_fu_178_ce),
    .dout(grp_fu_178_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xdc_reg_312),
    .din1(yda_reg_320),
    .ce(grp_fu_182_ce),
    .dout(grp_fu_182_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xda_reg_296),
    .din1(ydb_reg_328),
    .ce(grp_fu_186_ce),
    .dout(grp_fu_186_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xdb_reg_304),
    .din1(yda_reg_320),
    .ce(grp_fu_190_ce),
    .dout(grp_fu_190_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(da2da2_reg_404),
    .din1(min1_reg_419),
    .ce(grp_fu_194_ce),
    .dout(grp_fu_194_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(db2db2_reg_409),
    .din1(min2_reg_424),
    .ce(grp_fu_198_ce),
    .dout(grp_fu_198_p2)
);

accel_in_circle_accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
accel_in_circle_fmul_32ns_32ns_32_2_max_dsp_0_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dc2dc2_reg_414),
    .din1(min3_reg_429),
    .ce(grp_fu_202_ce),
    .dout(grp_fu_202_p2)
);

accel_in_circle_accel_in_circle_fcmp_32ns_32ns_1_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
accel_in_circle_fcmp_32ns_32ns_1_1_0_U30(
    .din0(det_reg_454),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_16_fu_206_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= and_ln30_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        da2da2_reg_404 <= grp_fu_114_p2;
        db2db2_reg_409 <= grp_fu_118_p2;
        dc2dc2_reg_414 <= grp_fu_122_p2;
        det_reg_454 <= grp_fu_142_p2;
        min1_reg_419 <= grp_fu_126_p2;
        min2_reg_424 <= grp_fu_130_p2;
        min3_reg_429 <= grp_fu_134_p2;
        tmp_10_reg_399 <= grp_fu_190_p2;
        tmp_11_reg_434 <= grp_fu_194_p2;
        tmp_12_reg_439 <= grp_fu_198_p2;
        tmp_13_reg_449 <= grp_fu_138_p2;
        tmp_14_reg_444 <= grp_fu_202_p2;
        tmp_14_reg_444_pp0_iter10_reg <= tmp_14_reg_444;
        tmp_14_reg_444_pp0_iter11_reg <= tmp_14_reg_444_pp0_iter10_reg;
        tmp_14_reg_444_pp0_iter12_reg <= tmp_14_reg_444_pp0_iter11_reg;
        tmp_1_reg_349 <= grp_fu_150_p2;
        tmp_2_reg_354 <= grp_fu_154_p2;
        tmp_3_reg_359 <= grp_fu_158_p2;
        tmp_4_reg_364 <= grp_fu_162_p2;
        tmp_5_reg_369 <= grp_fu_166_p2;
        tmp_6_reg_374 <= grp_fu_170_p2;
        tmp_7_reg_379 <= grp_fu_174_p2;
        tmp_8_reg_384 <= grp_fu_178_p2;
        tmp_9_reg_389 <= grp_fu_182_p2;
        tmp_reg_344 <= grp_fu_146_p2;
        tmp_s_reg_394 <= grp_fu_186_p2;
        xda_reg_296 <= grp_fu_78_p2;
        xdb_reg_304 <= grp_fu_84_p2;
        xdc_reg_312 <= grp_fu_90_p2;
        yda_reg_320 <= grp_fu_96_p2;
        ydb_reg_328 <= grp_fu_102_p2;
        ydc_reg_336 <= grp_fu_108_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        father_0_read_int_reg <= father_0_read;
        father_1_read_int_reg <= father_1_read;
        father_2_read_int_reg <= father_2_read;
        father_3_read_int_reg <= father_3_read;
        father_4_read_int_reg <= father_4_read;
        father_5_read_int_reg <= father_5_read;
        innerdata_0_read_int_reg <= innerdata_0_read;
        innerdata_1_read_int_reg <= innerdata_1_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = and_ln30_fu_246_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_102_ce = 1'b1;
    end else begin
        grp_fu_102_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_108_ce = 1'b1;
    end else begin
        grp_fu_108_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_114_ce = 1'b1;
    end else begin
        grp_fu_114_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_118_ce = 1'b1;
    end else begin
        grp_fu_118_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_122_ce = 1'b1;
    end else begin
        grp_fu_122_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_126_ce = 1'b1;
    end else begin
        grp_fu_126_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_130_ce = 1'b1;
    end else begin
        grp_fu_130_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_134_ce = 1'b1;
    end else begin
        grp_fu_134_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_138_ce = 1'b1;
    end else begin
        grp_fu_138_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_142_ce = 1'b1;
    end else begin
        grp_fu_142_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_146_ce = 1'b1;
    end else begin
        grp_fu_146_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_150_ce = 1'b1;
    end else begin
        grp_fu_150_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_154_ce = 1'b1;
    end else begin
        grp_fu_154_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_158_ce = 1'b1;
    end else begin
        grp_fu_158_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_162_ce = 1'b1;
    end else begin
        grp_fu_162_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_166_ce = 1'b1;
    end else begin
        grp_fu_166_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_170_ce = 1'b1;
    end else begin
        grp_fu_170_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_174_ce = 1'b1;
    end else begin
        grp_fu_174_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_178_ce = 1'b1;
    end else begin
        grp_fu_178_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_182_ce = 1'b1;
    end else begin
        grp_fu_182_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_186_ce = 1'b1;
    end else begin
        grp_fu_186_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_190_ce = 1'b1;
    end else begin
        grp_fu_190_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_194_ce = 1'b1;
    end else begin
        grp_fu_194_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_198_ce = 1'b1;
    end else begin
        grp_fu_198_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_202_ce = 1'b1;
    end else begin
        grp_fu_202_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_78_ce = 1'b1;
    end else begin
        grp_fu_78_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_84_ce = 1'b1;
    end else begin
        grp_fu_84_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_90_ce = 1'b1;
    end else begin
        grp_fu_90_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_96_ce = 1'b1;
    end else begin
        grp_fu_96_ce = 1'b0;
    end
end

assign and_ln30_fu_246_p2 = (tmp_16_fu_206_p2 & or_ln30_fu_240_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign bitcast_ln30_fu_211_p1 = det_reg_454;

assign icmp_ln30_1_fu_234_p2 = ((trunc_ln30_fu_224_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_228_p2 = ((tmp_15_fu_214_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln30_fu_240_p2 = (icmp_ln30_fu_228_p2 | icmp_ln30_1_fu_234_p2);

assign tmp_15_fu_214_p4 = {{bitcast_ln30_fu_211_p1[30:23]}};

assign trunc_ln30_fu_224_p1 = bitcast_ln30_fu_211_p1[22:0];

endmodule //accel_in_circle_in_circle
