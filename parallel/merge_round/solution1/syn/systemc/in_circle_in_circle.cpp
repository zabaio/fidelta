// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "in_circle_in_circle.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic in_circle_in_circle::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic in_circle_in_circle::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state1 = "1";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state2 = "10";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state3 = "100";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state4 = "1000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state5 = "10000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state6 = "100000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> in_circle_in_circle::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_1 = "1";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_5 = "101";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_9 = "1001";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_B = "1011";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_3 = "11";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_7 = "111";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_4 = "100";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_8 = "1000";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_A = "1010";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_2 = "10";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_6 = "110";
const sc_lv<32> in_circle_in_circle::ap_const_lv32_C = "1100";
const sc_lv<2> in_circle_in_circle::ap_const_lv2_0 = "00";
const sc_lv<2> in_circle_in_circle::ap_const_lv2_1 = "1";
const sc_lv<5> in_circle_in_circle::ap_const_lv5_2 = "10";
const bool in_circle_in_circle::ap_const_boolean_1 = true;

in_circle_in_circle::in_circle_in_circle(sc_module_name name) : sc_module(name), mVcdFile(0) {
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1 = new in_circle_in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1<1,2,32,32,32>("in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1");
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1->clk(ap_clk);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1->reset(ap_rst);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1->din0(grp_fu_84_p0);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1->din1(grp_fu_84_p1);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1->opcode(grp_fu_84_opcode);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1->ce(ap_var_for_const0);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1->dout(grp_fu_84_p2);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2 = new in_circle_in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1<1,2,32,32,32>("in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2");
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2->clk(ap_clk);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2->reset(ap_rst);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2->din0(grp_fu_90_p0);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2->din1(grp_fu_90_p1);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2->opcode(grp_fu_90_opcode);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2->ce(ap_var_for_const0);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2->dout(grp_fu_90_p2);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3 = new in_circle_in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1<1,2,32,32,32>("in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3");
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3->clk(ap_clk);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3->reset(ap_rst);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3->din0(grp_fu_96_p0);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3->din1(grp_fu_96_p1);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3->opcode(grp_fu_96_opcode);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3->ce(ap_var_for_const0);
    in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3->dout(grp_fu_96_p2);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4 = new in_circle_in_circle_fsub_32ns_32ns_32_2_full_dsp_1<1,2,32,32,32>("in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4");
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4->clk(ap_clk);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4->reset(ap_rst);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4->din0(grp_fu_102_p0);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4->din1(grp_fu_102_p1);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4->ce(ap_var_for_const0);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4->dout(grp_fu_102_p2);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5 = new in_circle_in_circle_fsub_32ns_32ns_32_2_full_dsp_1<1,2,32,32,32>("in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5");
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5->clk(ap_clk);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5->reset(ap_rst);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5->din0(grp_fu_108_p0);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5->din1(grp_fu_108_p1);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5->ce(ap_var_for_const0);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5->dout(grp_fu_108_p2);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6 = new in_circle_in_circle_fsub_32ns_32ns_32_2_full_dsp_1<1,2,32,32,32>("in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6");
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6->clk(ap_clk);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6->reset(ap_rst);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6->din0(grp_fu_114_p0);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6->din1(grp_fu_114_p1);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6->ce(ap_var_for_const0);
    in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6->dout(grp_fu_114_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7->din0(reg_173);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7->din1(grp_fu_120_p1);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7->dout(grp_fu_120_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8->din0(grp_fu_124_p0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8->din1(grp_fu_124_p1);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8->dout(grp_fu_124_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9->din0(grp_fu_128_p0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9->din1(grp_fu_128_p1);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9->dout(grp_fu_128_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10->din0(reg_210);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10->din1(reg_210);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10->dout(grp_fu_132_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11->din0(reg_192);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11->din1(reg_192);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11->dout(grp_fu_136_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12->din0(reg_219);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12->din1(reg_219);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12->dout(grp_fu_140_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13->din0(reg_183);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13->din1(reg_219);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13->dout(grp_fu_144_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14->din0(reg_192);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14->din1(reg_210);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14->dout(grp_fu_148_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15->din0(reg_173);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15->din1(reg_219);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15->dout(grp_fu_152_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16->din0(reg_192);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16->din1(reg_201);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16->dout(grp_fu_156_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17->din0(reg_173);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17->din1(reg_210);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17->dout(grp_fu_160_p2);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18 = new in_circle_in_circle_fmul_32ns_32ns_32_2_max_dsp_1<1,2,32,32,32>("in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18");
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18->clk(ap_clk);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18->reset(ap_rst);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18->din0(reg_183);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18->din1(reg_201);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18->ce(ap_var_for_const0);
    in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18->dout(grp_fu_164_p2);
    in_circle_fcmp_32ns_32ns_1_1_1_U19 = new in_circle_in_circle_fcmp_32ns_32ns_1_1_1<1,1,32,32,1>("in_circle_fcmp_32ns_32ns_1_1_1_U19");
    in_circle_fcmp_32ns_32ns_1_1_1_U19->din0(reg_173);
    in_circle_fcmp_32ns_32ns_1_1_1_U19->din1(ap_var_for_const1);
    in_circle_fcmp_32ns_32ns_1_1_1_U19->opcode(ap_var_for_const2);
    in_circle_fcmp_32ns_32ns_1_1_1_U19->dout(tmp_15_fu_168_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_15_fu_168_p2 );

    SC_METHOD(thread_grp_fu_102_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( t_p1_y );
    sensitive << ( tmp_6_reg_307 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_102_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( d_y );
    sensitive << ( tmp_7_reg_312 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_108_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( t_p2_y );
    sensitive << ( tmp_8_reg_317 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_108_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( d_y );
    sensitive << ( tmp_9_reg_322 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_114_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( t_p3_y );
    sensitive << ( tmp_s_reg_327 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_114_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( d_y );
    sensitive << ( tmp_10_reg_332 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_120_p1);
    sensitive << ( reg_173 );
    sensitive << ( reg_201 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_124_p0);
    sensitive << ( reg_183 );
    sensitive << ( reg_201 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_124_p1);
    sensitive << ( reg_201 );
    sensitive << ( reg_210 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_128_p0);
    sensitive << ( reg_183 );
    sensitive << ( reg_192 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_128_p1);
    sensitive << ( reg_183 );
    sensitive << ( reg_219 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_84_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_84_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( t_p1_x );
    sensitive << ( reg_173 );
    sensitive << ( reg_228 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_84_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( d_x );
    sensitive << ( reg_233 );
    sensitive << ( reg_238 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_90_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_90_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( t_p2_x );
    sensitive << ( reg_238 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_90_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( d_x );
    sensitive << ( tmp_3_reg_292 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_96_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_96_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( t_p3_x );
    sensitive << ( tmp_4_reg_297 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_96_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( d_x );
    sensitive << ( tmp_5_reg_302 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "in_circle_in_circle_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, t_p1_id, "(port)t_p1_id");
    sc_trace(mVcdFile, t_p1_x, "(port)t_p1_x");
    sc_trace(mVcdFile, t_p1_y, "(port)t_p1_y");
    sc_trace(mVcdFile, t_p2_id, "(port)t_p2_id");
    sc_trace(mVcdFile, t_p2_x, "(port)t_p2_x");
    sc_trace(mVcdFile, t_p2_y, "(port)t_p2_y");
    sc_trace(mVcdFile, t_p3_id, "(port)t_p3_id");
    sc_trace(mVcdFile, t_p3_x, "(port)t_p3_x");
    sc_trace(mVcdFile, t_p3_y, "(port)t_p3_y");
    sc_trace(mVcdFile, d_id, "(port)d_id");
    sc_trace(mVcdFile, d_x, "(port)d_x");
    sc_trace(mVcdFile, d_y, "(port)d_y");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_84_p2, "grp_fu_84_p2");
    sc_trace(mVcdFile, reg_173, "reg_173");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_90_p2, "grp_fu_90_p2");
    sc_trace(mVcdFile, reg_183, "reg_183");
    sc_trace(mVcdFile, grp_fu_96_p2, "grp_fu_96_p2");
    sc_trace(mVcdFile, reg_192, "reg_192");
    sc_trace(mVcdFile, grp_fu_102_p2, "grp_fu_102_p2");
    sc_trace(mVcdFile, reg_201, "reg_201");
    sc_trace(mVcdFile, grp_fu_108_p2, "grp_fu_108_p2");
    sc_trace(mVcdFile, reg_210, "reg_210");
    sc_trace(mVcdFile, grp_fu_114_p2, "grp_fu_114_p2");
    sc_trace(mVcdFile, reg_219, "reg_219");
    sc_trace(mVcdFile, grp_fu_120_p2, "grp_fu_120_p2");
    sc_trace(mVcdFile, reg_228, "reg_228");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_124_p2, "grp_fu_124_p2");
    sc_trace(mVcdFile, reg_233, "reg_233");
    sc_trace(mVcdFile, grp_fu_128_p2, "grp_fu_128_p2");
    sc_trace(mVcdFile, reg_238, "reg_238");
    sc_trace(mVcdFile, grp_fu_132_p2, "grp_fu_132_p2");
    sc_trace(mVcdFile, tmp_3_reg_292, "tmp_3_reg_292");
    sc_trace(mVcdFile, grp_fu_136_p2, "grp_fu_136_p2");
    sc_trace(mVcdFile, tmp_4_reg_297, "tmp_4_reg_297");
    sc_trace(mVcdFile, grp_fu_140_p2, "grp_fu_140_p2");
    sc_trace(mVcdFile, tmp_5_reg_302, "tmp_5_reg_302");
    sc_trace(mVcdFile, grp_fu_144_p2, "grp_fu_144_p2");
    sc_trace(mVcdFile, tmp_6_reg_307, "tmp_6_reg_307");
    sc_trace(mVcdFile, grp_fu_148_p2, "grp_fu_148_p2");
    sc_trace(mVcdFile, tmp_7_reg_312, "tmp_7_reg_312");
    sc_trace(mVcdFile, grp_fu_152_p2, "grp_fu_152_p2");
    sc_trace(mVcdFile, tmp_8_reg_317, "tmp_8_reg_317");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, tmp_9_reg_322, "tmp_9_reg_322");
    sc_trace(mVcdFile, grp_fu_160_p2, "grp_fu_160_p2");
    sc_trace(mVcdFile, tmp_s_reg_327, "tmp_s_reg_327");
    sc_trace(mVcdFile, grp_fu_164_p2, "grp_fu_164_p2");
    sc_trace(mVcdFile, tmp_10_reg_332, "tmp_10_reg_332");
    sc_trace(mVcdFile, grp_fu_84_p0, "grp_fu_84_p0");
    sc_trace(mVcdFile, grp_fu_84_p1, "grp_fu_84_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_90_p0, "grp_fu_90_p0");
    sc_trace(mVcdFile, grp_fu_90_p1, "grp_fu_90_p1");
    sc_trace(mVcdFile, grp_fu_96_p0, "grp_fu_96_p0");
    sc_trace(mVcdFile, grp_fu_96_p1, "grp_fu_96_p1");
    sc_trace(mVcdFile, grp_fu_102_p0, "grp_fu_102_p0");
    sc_trace(mVcdFile, grp_fu_102_p1, "grp_fu_102_p1");
    sc_trace(mVcdFile, grp_fu_108_p0, "grp_fu_108_p0");
    sc_trace(mVcdFile, grp_fu_108_p1, "grp_fu_108_p1");
    sc_trace(mVcdFile, grp_fu_114_p0, "grp_fu_114_p0");
    sc_trace(mVcdFile, grp_fu_114_p1, "grp_fu_114_p1");
    sc_trace(mVcdFile, grp_fu_120_p1, "grp_fu_120_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_124_p0, "grp_fu_124_p0");
    sc_trace(mVcdFile, grp_fu_124_p1, "grp_fu_124_p1");
    sc_trace(mVcdFile, grp_fu_128_p0, "grp_fu_128_p0");
    sc_trace(mVcdFile, grp_fu_128_p1, "grp_fu_128_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_15_fu_168_p2, "tmp_15_fu_168_p2");
    sc_trace(mVcdFile, grp_fu_84_opcode, "grp_fu_84_opcode");
    sc_trace(mVcdFile, grp_fu_90_opcode, "grp_fu_90_opcode");
    sc_trace(mVcdFile, grp_fu_96_opcode, "grp_fu_96_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("in_circle_in_circle.hdltvin.dat");
    mHdltvoutHandle.open("in_circle_in_circle.hdltvout.dat");
}

in_circle_in_circle::~in_circle_in_circle() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U1;
    delete in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U2;
    delete in_circle_faddfsub_32ns_32ns_32_2_full_dsp_1_U3;
    delete in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U4;
    delete in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U5;
    delete in_circle_fsub_32ns_32ns_32_2_full_dsp_1_U6;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U7;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U8;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U9;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U10;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U11;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U12;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U13;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U14;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U15;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U16;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U17;
    delete in_circle_fmul_32ns_32ns_32_2_max_dsp_1_U18;
    delete in_circle_fcmp_32ns_32ns_1_1_1_U19;
}

void in_circle_in_circle::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void in_circle_in_circle::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void in_circle_in_circle::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void in_circle_in_circle::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        reg_173 = grp_fu_84_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_183 = grp_fu_90_p2.read();
        reg_192 = grp_fu_96_p2.read();
        reg_201 = grp_fu_102_p2.read();
        reg_210 = grp_fu_108_p2.read();
        reg_219 = grp_fu_114_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        reg_228 = grp_fu_120_p2.read();
        reg_233 = grp_fu_124_p2.read();
        reg_238 = grp_fu_128_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_10_reg_332 = grp_fu_164_p2.read();
        tmp_3_reg_292 = grp_fu_132_p2.read();
        tmp_4_reg_297 = grp_fu_136_p2.read();
        tmp_5_reg_302 = grp_fu_140_p2.read();
        tmp_6_reg_307 = grp_fu_144_p2.read();
        tmp_7_reg_312 = grp_fu_148_p2.read();
        tmp_8_reg_317 = grp_fu_152_p2.read();
        tmp_9_reg_322 = grp_fu_156_p2.read();
        tmp_s_reg_327 = grp_fu_160_p2.read();
    }
}

void in_circle_in_circle::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void in_circle_in_circle::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void in_circle_in_circle::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void in_circle_in_circle::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void in_circle_in_circle::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void in_circle_in_circle::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void in_circle_in_circle::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void in_circle_in_circle::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void in_circle_in_circle::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void in_circle_in_circle::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void in_circle_in_circle::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void in_circle_in_circle::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void in_circle_in_circle::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void in_circle_in_circle::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void in_circle_in_circle::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void in_circle_in_circle::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void in_circle_in_circle::thread_ap_return() {
    ap_return = esl_zext<32,1>(tmp_15_fu_168_p2.read());
}

void in_circle_in_circle::thread_grp_fu_102_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_102_p0 = tmp_6_reg_307.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_102_p0 = t_p1_y.read();
    } else {
        grp_fu_102_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_102_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_102_p1 = tmp_7_reg_312.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_102_p1 = d_y.read();
    } else {
        grp_fu_102_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_108_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_108_p0 = tmp_8_reg_317.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_108_p0 = t_p2_y.read();
    } else {
        grp_fu_108_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_108_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_108_p1 = tmp_9_reg_322.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_108_p1 = d_y.read();
    } else {
        grp_fu_108_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_114_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_114_p0 = tmp_s_reg_327.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_114_p0 = t_p3_y.read();
    } else {
        grp_fu_114_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_114_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_114_p1 = tmp_10_reg_332.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_114_p1 = d_y.read();
    } else {
        grp_fu_114_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_120_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_120_p1 = reg_201.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_120_p1 = reg_173.read();
    } else {
        grp_fu_120_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_124_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_124_p0 = reg_183.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_124_p0 = reg_201.read();
    } else {
        grp_fu_124_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_124_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_124_p1 = reg_210.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_124_p1 = reg_201.read();
    } else {
        grp_fu_124_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_128_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_128_p0 = reg_192.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_128_p0 = reg_183.read();
    } else {
        grp_fu_128_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_128_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_128_p1 = reg_219.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_128_p1 = reg_183.read();
    } else {
        grp_fu_128_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_84_opcode() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        grp_fu_84_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_84_opcode = ap_const_lv2_0;
    } else {
        grp_fu_84_opcode =  (sc_lv<2>) ("XX");
    }
}

void in_circle_in_circle::thread_grp_fu_84_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_84_p0 = reg_173.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        grp_fu_84_p0 = reg_228.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_84_p0 = t_p1_x.read();
    } else {
        grp_fu_84_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_84_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_84_p1 = reg_238.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        grp_fu_84_p1 = reg_233.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_84_p1 = d_x.read();
    } else {
        grp_fu_84_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_90_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_90_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_90_opcode = ap_const_lv2_0;
    } else {
        grp_fu_90_opcode =  (sc_lv<2>) ("XX");
    }
}

void in_circle_in_circle::thread_grp_fu_90_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_90_p0 = reg_238.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_90_p0 = t_p2_x.read();
    } else {
        grp_fu_90_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_90_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_90_p1 = tmp_3_reg_292.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_90_p1 = d_x.read();
    } else {
        grp_fu_90_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_96_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_96_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_96_opcode = ap_const_lv2_0;
    } else {
        grp_fu_96_opcode =  (sc_lv<2>) ("XX");
    }
}

void in_circle_in_circle::thread_grp_fu_96_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_96_p0 = tmp_4_reg_297.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_96_p0 = t_p3_x.read();
    } else {
        grp_fu_96_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_grp_fu_96_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_96_p1 = tmp_5_reg_302.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_96_p1 = d_x.read();
    } else {
        grp_fu_96_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void in_circle_in_circle::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

void in_circle_in_circle::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p1_id\" :  \"" << t_p1_id.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p1_x\" :  \"" << t_p1_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p1_y\" :  \"" << t_p1_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p2_id\" :  \"" << t_p2_id.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p2_x\" :  \"" << t_p2_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p2_y\" :  \"" << t_p2_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p3_id\" :  \"" << t_p3_id.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p3_x\" :  \"" << t_p3_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"t_p3_y\" :  \"" << t_p3_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"d_id\" :  \"" << d_id.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"d_x\" :  \"" << d_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"d_y\" :  \"" << d_y.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

